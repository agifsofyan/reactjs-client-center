{"ast":null,"code":"import axios from 'axios';\nimport { SWAGGER_URL } from '../../Support/API_URL';\nimport { cart_start, cart_success, cart_added, cart_failed } from '../Types';\nconst token = localStorage.getItem('token');\nexport const getCart = () => {\n  return async dispatch => {\n    dispatch({\n      type: cart_start\n    });\n\n    try {\n      if (token) {\n        let options = {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n            'Authorization': `Bearer ${token}`\n          }\n        };\n        let res = await axios.get(`${SWAGGER_URL}/carts/list`, options);\n        dispatch({\n          type: cart_success,\n          payload: res.data.data.items\n        }); // console.log('redux getCart', res.data.data.items);\n      }\n    } catch {\n      dispatch({\n        type: cart_failed\n      });\n    }\n  };\n};\nexport const addToCart = product_id => {\n  return async dispatch => {\n    dispatch({\n      type: cart_start\n    });\n\n    try {\n      if (token) {\n        let options = {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n            'Authorization': `Bearer ${token}`\n          }\n        };\n        console.log('sblm axios');\n        let res = await axios.post(`${SWAGGER_URL}/carts/add`, product_id, options);\n        console.log('stlh axios');\n        dispatch({\n          type: cart_added,\n          payload: res.data.data.items\n        });\n      }\n    } catch {\n      dispatch({\n        type: cart_failed\n      });\n    }\n  };\n};\nexport const removeCart = product_id => {\n  return async dispatch => {\n    dispatch({\n      type: cart_start\n    });\n\n    try {\n      if (token) {\n        let options = {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n            'Authorization': `Bearer ${token}`\n          }\n        };\n        console.log('sblm axios remove');\n        console.log(product_id);\n        let res = await axios.delete(`${SWAGGER_URL}/carts/remove?product_id=${product_id}`, options);\n        console.log('stlh axios remove');\n        dispatch({\n          type: cart_success,\n          payload: res.data.data.items\n        });\n        console.log('stlh dispatch SUKSES');\n      }\n    } catch {\n      dispatch({\n        type: cart_failed\n      });\n      console.log('stlh dispatch FAILED');\n    }\n  };\n};","map":{"version":3,"sources":["E:/front-end-client/client/src/Redux/Actions/CartAction.js"],"names":["axios","SWAGGER_URL","cart_start","cart_success","cart_added","cart_failed","token","localStorage","getItem","getCart","dispatch","type","options","headers","res","get","payload","data","items","addToCart","product_id","console","log","post","removeCart","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { SWAGGER_URL } from '../../Support/API_URL';\r\nimport {\r\n    cart_start,\r\n    cart_success,\r\n    cart_added,\r\n    cart_failed,\r\n} from '../Types';\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nexport const getCart = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: cart_start,\r\n        });\r\n        try {\r\n            if (token) {\r\n                let options = {\r\n                    headers : {\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                };\r\n                let res = await axios.get(`${SWAGGER_URL}/carts/list`, options);\r\n                dispatch({\r\n                    type: cart_success,\r\n                    payload: res.data.data.items,\r\n                });\r\n                // console.log('redux getCart', res.data.data.items);\r\n            }\r\n        } catch {\r\n            dispatch({\r\n                type: cart_failed,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const addToCart = (product_id) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: cart_start,\r\n        });\r\n        try {\r\n            if (token) {\r\n                let options = {\r\n                    headers : {\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                };\r\n                console.log('sblm axios');\r\n                let res = await axios.post(`${SWAGGER_URL}/carts/add`, product_id, options);\r\n                console.log('stlh axios');\r\n                dispatch({\r\n                    type: cart_added,\r\n                    payload: res.data.data.items,\r\n                });\r\n            }\r\n        } catch {\r\n            dispatch({\r\n                type: cart_failed,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const removeCart = (product_id) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: cart_start,\r\n        });\r\n        try {\r\n            if (token) {\r\n                let options = {\r\n                    headers : {\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                };\r\n                console.log('sblm axios remove');\r\n                console.log(product_id);\r\n                let res = await axios.delete(`${SWAGGER_URL}/carts/remove?product_id=${product_id}`, options);\r\n                console.log('stlh axios remove');\r\n                dispatch({\r\n                    type: cart_success,\r\n                    payload: res.data.data.items,\r\n                });\r\n                console.log('stlh dispatch SUKSES');\r\n            }\r\n        } catch {\r\n            dispatch({\r\n                type: cart_failed,\r\n            });\r\n            console.log('stlh dispatch FAILED');\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}