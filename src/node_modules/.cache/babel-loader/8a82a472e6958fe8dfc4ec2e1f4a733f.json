{"ast":null,"code":"import axios from 'axios';\nimport { SWAGGER_URL } from '../../Support/API_URL';\nimport { payment_start, payment_success, payment_failed } from '../Types';\nconst token = localStorage.getItem('token');\nexport const getPayMethod = () => {\n  return async dispatch => {\n    dispatch({\n      type: payment_start\n    });\n\n    try {\n      if (token) {\n        let options = {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n            'Authorization': `Bearer ${token}`\n          }\n        };\n        let res = await axios.get(`${SWAGGER_URL}/payments/method`, options);\n        dispatch({\n          type: payment_success,\n          payload: res.data.data\n        }); // console.log('redux getPayMethod', res.data.data);\n      }\n    } catch {\n      dispatch({\n        type: payment_failed\n      });\n    }\n  };\n};\nexport const getPayMethodById = id => {\n  return async dispatch => {\n    dispatch({\n      type: payment_start\n    });\n\n    try {\n      let res = await axios.get(`${SWAGGER_URL}/payments/method/${id}`);\n      dispatch({\n        type: payment_success,\n        payload: res.data.data\n      });\n    } catch {\n      dispatch({\n        type: payment_failed\n      });\n    }\n  };\n};\nexport const postPaymentMethod = form => {\n  return async dispatch => {\n    dispatch({\n      type: payment_start\n    });\n\n    try {\n      if (token) {\n        let options = {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n            'Authorization': `Bearer ${token}`\n          }\n        };\n        let res = await axios.post(`${SWAGGER_URL}/payments/method`, form, options);\n        dispatch({\n          type: payment_success,\n          payload: res.data.data\n        });\n        console.log(`post payment sukses`);\n      }\n    } catch {\n      dispatch({\n        type: payment_failed\n      });\n    }\n  };\n};","map":{"version":3,"sources":["E:/front-end-client/client/src/Redux/Actions/PaymentAction.js"],"names":["axios","SWAGGER_URL","payment_start","payment_success","payment_failed","token","localStorage","getItem","getPayMethod","dispatch","type","options","headers","res","get","payload","data","getPayMethodById","id","postPaymentMethod","form","post","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SACIC,aADJ,EAEIC,eAFJ,EAGIC,cAHJ,QAIO,UAJP;AAMA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;;AAGA,QAAI;AACA,UAAIG,KAAJ,EAAW;AACP,YAAIM,OAAO,GAAG;AACVC,UAAAA,OAAO,EAAG;AACN,2CAA+B,GADzB;AAEN,4CAAgC,mCAF1B;AAGN,6BAAkB,UAASP,KAAM;AAH3B;AADA,SAAd;AAOA,YAAIQ,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAEb,WAAY,kBAAzB,EAA4CU,OAA5C,CAAhB;AACAF,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEP,eADD;AAELY,UAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASA;AAFb,SAAD,CAAR,CATO,CAaP;AACH;AACJ,KAhBD,CAgBE,MAAM;AACJP,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN;AADD,OAAD,CAAR;AAGH;AACJ,GAzBD;AA0BH,CA3BM;AA6BP,OAAO,MAAMa,gBAAgB,GAAIC,EAAD,IAAQ;AACpC,SAAO,MAAMT,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;;AAGA,QAAI;AACA,UAAIW,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAEb,WAAY,oBAAmBiB,EAAG,EAA/C,CAAhB;AACAT,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEP,eADD;AAELY,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAND,CAME,MAAM;AACJP,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN;AADD,OAAD,CAAR;AAGH;AACJ,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAMe,iBAAiB,GAAIC,IAAD,IAAU;AACvC,SAAO,MAAMX,QAAN,IAAiB;AACpBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;;AAGA,QAAI;AACA,UAAIG,KAAJ,EAAW;AACP,YAAIM,OAAO,GAAG;AACVC,UAAAA,OAAO,EAAG;AACN,2CAA+B,GADzB;AAEN,4CAAgC,mCAF1B;AAGN,6BAAkB,UAASP,KAAM;AAH3B;AADA,SAAd;AAOA,YAAIQ,GAAG,GAAG,MAAMb,KAAK,CAACqB,IAAN,CAAY,GAAEpB,WAAY,kBAA1B,EAA6CmB,IAA7C,EAAmDT,OAAnD,CAAhB;AACAF,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEP,eADD;AAELY,UAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASA;AAFb,SAAD,CAAR;AAIAM,QAAAA,OAAO,CAACC,GAAR,CAAa,qBAAb;AACH;AACJ,KAhBD,CAgBE,MAAM;AACJd,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN;AADD,OAAD,CAAR;AAGH;AACJ,GAzBD;AA0BH,CA3BM","sourcesContent":["import axios from 'axios';\r\nimport { SWAGGER_URL } from '../../Support/API_URL';\r\nimport {\r\n    payment_start,\r\n    payment_success,\r\n    payment_failed,\r\n} from '../Types';\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nexport const getPayMethod = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: payment_start,\r\n        });\r\n        try {\r\n            if (token) {\r\n                let options = {\r\n                    headers : {\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                };\r\n                let res = await axios.get(`${SWAGGER_URL}/payments/method`, options);\r\n                dispatch({\r\n                    type: payment_success,\r\n                    payload: res.data.data,\r\n                });\r\n                // console.log('redux getPayMethod', res.data.data);\r\n            }\r\n        } catch {\r\n            dispatch({\r\n                type: payment_failed,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const getPayMethodById = (id) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: payment_start,\r\n        });\r\n        try {\r\n            let res = await axios.get(`${SWAGGER_URL}/payments/method/${id}`);\r\n            dispatch({\r\n                type: payment_success,\r\n                payload: res.data.data,\r\n            });\r\n        } catch {\r\n            dispatch({\r\n                type: payment_failed,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const postPaymentMethod = (form) => {\r\n    return async dispatch=> {\r\n        dispatch({\r\n            type: payment_start,\r\n        });\r\n        try {\r\n            if (token) {\r\n                let options = {\r\n                    headers : {\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                };\r\n                let res = await axios.post(`${SWAGGER_URL}/payments/method`, form, options);\r\n                dispatch({\r\n                    type: payment_success,\r\n                    payload: res.data.data,\r\n                });\r\n                console.log(`post payment sukses`);\r\n            }\r\n        } catch {\r\n            dispatch({\r\n                type: payment_failed,\r\n            });\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}