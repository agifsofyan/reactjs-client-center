{"ast":null,"code":"import axios from 'axios';\nimport { SWAGGER_URL } from '../../Support/API_URL';\nimport { order_start, order_success, order_post, order_failed } from '../Types';\nconst token = localStorage.getItem('token');\nexport const addToOrder = body => {\n  return async dispatch => {\n    dispatch({\n      type: order_start\n    });\n\n    try {\n      if (token) {\n        let options = {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n            'Authorization': `Bearer ${token}`\n          }\n        };\n        console.log('sblm axios order');\n        console.log('body', body);\n        console.log('token', token);\n        let res = await axios.post(`${SWAGGER_URL}/orders/store`, body, options);\n        console.log('stlh axios order');\n        dispatch({\n          type: order_post,\n          payload: res.data.data\n        });\n        console.log('order berhasil');\n      }\n    } catch {\n      dispatch({\n        type: order_failed\n      });\n    }\n  };\n};\nexport const orderList = () => {\n  return async dispatch => {\n    dispatch({\n      type: order_start\n    });\n\n    try {\n      let res = await axios.get(`${SWAGGER_URL}/orders/list`);\n      dispatch({\n        type: order_success,\n        payload: res.data.data\n      });\n    } catch {\n      dispatch({\n        type: order_failed\n      });\n    }\n  };\n};\nexport const orderDetailById = order_id => {\n  return async dispatch => {\n    dispatch({\n      type: order_start\n    });\n\n    try {\n      let res = await axios.get(`${SWAGGER_URL}/orders/${order_id}/detail`);\n      dispatch({\n        type: order_success,\n        payload: res.data.data\n      });\n    } catch {\n      dispatch({\n        type: order_failed\n      });\n    }\n  };\n};\nexport const orderByUserId = user_id => {\n  return async dispatch => {\n    dispatch({\n      type: order_start\n    });\n\n    try {\n      let res = await axios.get(`${SWAGGER_URL}/orders/${user_id}/user`);\n      dispatch({\n        type: order_success,\n        payload: res.data\n      });\n    } catch {\n      dispatch({\n        type: order_failed\n      });\n    }\n  };\n};\nexport const findOrder = search => {\n  return async dispatch => {\n    dispatch({\n      type: order_start\n    });\n\n    try {\n      let res = await axios.post(`${SWAGGER_URL}/orders/find/search`, search);\n      dispatch({\n        type: order_success,\n        payload: res.data\n      });\n    } catch {\n      dispatch({\n        type: order_failed\n      });\n    }\n  };\n};","map":{"version":3,"sources":["E:/front-end-client/client/src/Redux/Actions/OrderAction.js"],"names":["axios","SWAGGER_URL","order_start","order_success","order_post","order_failed","token","localStorage","getItem","addToOrder","body","dispatch","type","options","headers","console","log","res","post","payload","data","orderList","get","orderDetailById","order_id","orderByUserId","user_id","findOrder","search"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { SWAGGER_URL } from '../../Support/API_URL';\r\nimport {\r\n    order_start,\r\n    order_success,\r\n    order_post,\r\n    order_failed,\r\n} from '../Types';\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nexport const addToOrder = (body) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: order_start,\r\n        });\r\n        try {\r\n            if (token) {\r\n                let options = {\r\n                    headers : {\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                };\r\n                console.log('sblm axios order');\r\n                console.log('body', body);\r\n                console.log('token', token);\r\n                let res = await axios.post(`${SWAGGER_URL}/orders/store`, body, options);\r\n                console.log('stlh axios order');\r\n                dispatch({\r\n                    type: order_post,\r\n                    payload: res.data.data,\r\n                });\r\n                console.log('order berhasil');\r\n            }\r\n        } catch {\r\n            dispatch({\r\n                type: order_failed,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const orderList = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: order_start,\r\n        });\r\n        try {\r\n            let res = await axios.get(`${SWAGGER_URL}/orders/list`);\r\n            dispatch({\r\n                type: order_success,\r\n                payload: res.data.data,\r\n            });\r\n        } catch {\r\n            dispatch({\r\n                type: order_failed,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const orderDetailById = (order_id) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: order_start,\r\n        });\r\n        try {\r\n            let res = await axios.get(`${SWAGGER_URL}/orders/${order_id}/detail`);\r\n            dispatch({\r\n                type: order_success,\r\n                payload: res.data.data,\r\n            });\r\n        } catch {\r\n            dispatch({\r\n                type: order_failed,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const orderByUserId = (user_id) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: order_start,\r\n        });\r\n        try {\r\n            let res = await axios.get(`${SWAGGER_URL}/orders/${user_id}/user`);\r\n            dispatch({\r\n                type: order_success,\r\n                payload: res.data,\r\n            });\r\n        } catch {\r\n            dispatch({\r\n                type: order_failed,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const findOrder = (search) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: order_start,\r\n        });\r\n        try {\r\n            let res = await axios.post(`${SWAGGER_URL}/orders/find/search`, search);\r\n            dispatch({\r\n                type: order_success,\r\n                payload: res.data,\r\n            });\r\n        } catch {\r\n            dispatch({\r\n                type: order_failed,\r\n            });\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}